body {
    font-family: "Raleway" ;
    color: #333333;
    margin: 0;
}
.page-gallery h2 {
    font-size: 42px;
    line-height: 50px;
    margin: 0;
    padding-bottom: 45px;
}
.page-gallery {
    width: 980px;
    margin: 0 auto;
    padding: 100px 0;
}
.active-photo {
    display: block;
    margin-bottom: 20px;
}
.preview-list {
    padding: 0;
    margin: 0;
    list-style: none;
    display: flex;
    gap: 20px;
    /* justify-content: space-between; */ 
}
/* Зафиксируем ширину элементов */
.preview-list li {
    width: 180px;
    /* margin-right: 20px; */
}
/* .preview-list li:last-child {
    margin-right: 0;
} */
/* Добавляем псевдоэлемент для оверлея
Геометрия компонента готова. Мы установили элементам размеры и взаимное положение. Пришло время задать декоративные стили.

В макете создан декоративный слой над миниатюрой фотографии. Такой слой, который расположен над основным элементом, называют «оверлей». Оверлеи используются для наложения друг на друга двух или более слоёв, в результате образуется один производный слой, содержащий их композицию. Композиция слоёв позволяет добавить основному изображению декоративные эффекты: осветление, затемнение, размытие и многие другие. Оверлеи используются в дизайне самостоятельно, для добавления декоративных эффектов, или служат основой для отображения текста на изображении. */
/* В макете оверлеи созданы отдельными элементами, а мы воспользуемся псевдоэлементом в CSS, чтобы не усложнять разметку компонента. Добавьте псевдоэлемент ссылкам .preview-list a. Не забудьте указать для псевдоэлемента значение свойства content!

Чтобы расположить псевдоэлемент над изображением, мы должны установить ему абсолютное позиционирование. Такое позиционирование позволяет размещать элементы вне потока, друг над другом.

При абсолютном позиционировании важным оказывается выбор предка, относительно которого будет работать позиционирование. Мы добавляем псевдоэлемент ссылке .preview-list a и этот же элемент назначим «якорем» для абсолютного позиционирования. Для этого нужно установить ему свойство position, отличное от static. */
.preview-list a {
    position: relative;
    display: block;
}
.preview-list a::before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: rgba(255, 255, 255, 0.5);
  }
  .preview-list img {
    display: block;
  }
  /* Добавляем псевдоэлемент для оверлея: решение
В задании вам нужно было установить ссылке относительное позиционирование и добавить ей псевдоэлемент с абсолютным позиционированием. Чтобы «привязать» позиционирование псевдоэлемента, нам нужно назначить родителю позиционирование, отличное от static. Мы не хотим менять поведение ссылки в потоке, поэтому используем относительное позиционирование — значение position: relative;.

Для создания оверлея можно использовать любой из псевдоэлементов: ::before или ::after. Мы используем абсолютное позиционирование, поэтому порядок элементов не имеет значения.

Необходимое условие создания псевдоэлемента — указание значения для свойства content. Для оверлея содержание должно быть пустым, поэтому указываем пустую строку. Если не указать значение, псевдоэлемент не будет создан.

Псевдоэлемент мы создали, но его пока не видно. Размеры псевдоэлемента равны нулю! Исправим это в следующем задании. */


/* Псевдоэлемент расположен над ссылкой вне потока, и сейчас его размеры равны нулю. Абсолютно позиционированному элементу можно указать размеры, равные габаритам ближайшего позиционированного предка. Для этого все координаты top/bottom/left/right нужно установить равными 0. В этом случае элемент «растягивается» до размеров предка.

Установите размеры оверлея, равные размеру родителя. Перенесите из макета параметры фона оверлея.

После выполнения всех задач мы получим полупрозрачный оверлей над миниатюрами, но его размер не закроет изображение полностью. В следующем задании разберём, почему так происходит, и узнаем, как добиться нужного размера оверлея. */


/* Фону псевдоэлемента установили полупрозрачный белый цвет.

Мы создали абсолютно позиционированный оверлей над изображением миниатюры. Размеры оверлея задали равными размеру родителя с помощью позиционирования по противоположным границам. Размер можно установить либо обнулением всех координат, либо альтернативным способом: левую и верхнюю координаты (left / top) установить равными 0, а ширину и высоту — 100%. Но оверлей перекрывает только нижнюю границу изображения, почему так произошло? */
/* Дело в том, что оверлей мы позиционируем относительно ссылки, а тегу <a> браузер по умолчанию устанавливает строчный тип бокса. Такой бокс принимает размеры по содержимому. Высота строчного бокса равна высоте строки. Список миниатюр мы верстаем как интерфейсный элемент, и чтобы контролировать его размеры, нужно изменить тип бокса для ссылок.

Установите для ссылок в списке миниатюр display: block;.

Теперь блочный бокс ссылки содержит изображение миниатюры со строчным типом бокса. Строчное изображение выравнивается по базовой линии текста, и высота оверлея превышает размер изображения. Между изображением и нижним краем ссылки появляется отступ, величина которого зависит от высоты линии. */
/* Похожую ситуацию мы уже разбирали, когда устанавливали вертикальный отступ для основного изображения. Для изображений в интерфейсе мы должны задать блочный тип бокса.

Установите для изображений миниатюр display: block;.

Теперь размеры оверлея точно совпадают с размерами изображения под ним. Нам остаётся отменить наложение оверлея для текущей активной миниатюры. Займёмся этим в следующем задании. */

.preview-list a.active-item::before {
    background-color: rgba(255, 255, 255, 0);
}
/* Активная миниатюра
Одна из миниатюр выбрана для показа основного изображения и отмечена классом active-item. У этой миниатюры нужно отменить оверлей.
Мы создали слой над изображением с помощью псевдоэлемента с полупрозрачным фоном. Чтобы сделать псевдоэлемент невидимым, достаточно установить ему полностью прозрачный цвет фона.

Чтобы задать стили для активной ссылки, мы добавили в селектор псевдоэлемента класс active-item.
Активная миниатюра: решение
Разбираем способы отмены оверлея для активной миниатюры. Мы выбрали вариант с установкой прозрачного фона, используя ключевое слово transparent. Альтернативным решением может быть изменение размера оверлея на нулевой или сброс содержания для свойства content.

Ключевое слово transparent равнозначно установке значения полностью прозрачного цвета rgba(0, 0, 0, 0). Его можно использовать во всех свойствах, где можно применить значение цвета. Установка прозрачного фона оверлея делает миниатюру полностью видимой.

Вёрстка компонента готова! */